type Customer {
    id: ID!
    name: String!
    email: String!
    address: String!
    orders: [Order!]
}

type Product {
    id: ID!
    name: String!
    price: Float!
    description: String
}

type Order {
    id: ID!
    orderedOn: String!
    products: [Product!]!
    status: OrderStatus!
}

enum OrderStatus {
    PENDING,
    PROCESSING,
    COMPLETED,
    CANCELLED
}

input PriceFilter {
    max: Float
    min: Float
}


type Query {
    """
    Queries a customer by its id.
    """
    customer(id: ID): Customer
    """
    Queries all customers.
    """
    customers: [Customer]
    """
    Queries all products.
    """
    products(priceFilter: PriceFilter): [Product]

    """
    Queries a product by its id.
    """
    product(id: ID): Product
    """
    Queries all products.
    """
    orders: [Order]
    """
    Queries an order by its id.
    """
    order(id: ID): Order
}